// -- FUNCTIONS

function GetBrowserLanguageCode(
    array valid_language_code_array
    )
{
    if ( isset( _SERVER[ 'HTTP_ACCEPT_LANGUAGE' ] ) )
    {
        var browser_language_code_array = explode( ',', str_replace( ';', ',', _SERVER[ 'HTTP_ACCEPT_LANGUAGE' ] ) );

        foreach ( var browser_language_code; browser_language_code_array )
        {
            browser_language_code = strtolower( substr( browser_language_code, 0, 2 ) );

            var valid_language_code_index = array_search( browser_language_code, valid_language_code_array, true );

            if ( valid_language_code_index !== false )
            {
                return valid_language_code_array[ valid_language_code_index ];
            }
        }
    }
    else
    {
        return valid_language_code_array[ 0 ];
    }
}

// ~~

function GetTranslatedText(
    string text,
    string language_code,
    string default_language_code = 'en'
    )
{
    var translated_text_array = explode( 'Â¨', text );
    var translated_text = translated_text_array[ 0 ];

    if ( language_code != default_language_code )
    {
        for ( var translated_text_index = 1;
              translated_text_index < count( translated_text_array );
              ++translated_text_index )
        {
            var language_code_translated_text = translated_text_array[ translated_text_index ];

            if ( substr( language_code_translated_text, 0, 2 ) == language_code )
            {
                translated_text = substr( language_code_translated_text, 3 );

                break;
            }
        }
    }

    return str_replace( '[<', '<', str_replace( '>]', '>', translated_text ) );
}

// ~~

function GetTranslatedNumber(
    string number,
    string decimal_separator
    )
{
    if ( decimal_separator === ',' )
    {
        return str_replace( '.', ',', number );
    }
    else
    {
        return number;
    }
}
