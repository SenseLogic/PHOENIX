// -- FUNCTIONS

function GetDatabaseCommentArray(
    )
{
    var statement = GetDatabaseStatement( 'select Id, ArticleId, UserId, Text, DateTime from COMMENT order by DateTime desc' );

    if ( !statement.execute() )
    {
        var_dump( statement.errorInfo() );
    }

    return GetDatabaseObjectArray( statement );
}

// ~~

function GetDatabaseCommentByIdMap(
    )
{
    var statement = GetDatabaseStatement( 'select Id, ArticleId, UserId, Text, DateTime from COMMENT' );

    if ( !statement.execute() )
    {
        var_dump( statement.errorInfo() );
    }

    var comment_map = [];

    while ( var comment = statement.fetchObject() )
    {
        comment_map[ comment.Id ] = comment;
    }

    return comment_map;
}

// ~~

function GetDatabaseComment(
    int id
    )
{
    var statement = GetDatabaseStatement( 'select Id, ArticleId, UserId, Text, DateTime from COMMENT where Id = ? limit 1' );
    statement.bindParam( 1, id, PDO::PARAM_INT );

    if ( !statement.execute() )
    {
        var_dump( statement.errorInfo() );
    }

    return GetDatabaseObject( statement );
}

// ~~

function AddDatabaseComment(
    int article_id,
    int user_id,
    string text,
    string date_time
    )
{
    var statement = GetDatabaseStatement( 'insert into COMMENT ( ArticleId, UserId, Text, DateTime ) values ( ?, ?, ?, ? )' );
    statement.bindParam( 1, article_id, PDO::PARAM_INT );
    statement.bindParam( 2, user_id, PDO::PARAM_INT );
    statement.bindParam( 3, text, PDO::PARAM_STR );
    statement.bindParam( 4, date_time, PDO::PARAM_STR );

    if ( !statement.execute() )
    {
        var_dump( statement.errorInfo() );
    }

    return GetDatabaseAddedId( statement );
}

// ~~

function SetDatabaseComment(
    int id,
    int article_id,
    int user_id,
    string text,
    string date_time
    )
{
    var statement = GetDatabaseStatement( 'update COMMENT set ArticleId = ?, UserId = ?, Text = ?, DateTime = ? where Id = ?' );
    statement.bindParam( 1, article_id, PDO::PARAM_INT );
    statement.bindParam( 2, user_id, PDO::PARAM_INT );
    statement.bindParam( 3, text, PDO::PARAM_STR );
    statement.bindParam( 4, date_time, PDO::PARAM_STR );
    statement.bindParam( 5, id, PDO::PARAM_INT );

    if ( !statement.execute() )
    {
        var_dump( statement.errorInfo() );
    }
}

// ~~

function RemoveDatabaseComment(
    int id
    )
{
    var statement = GetDatabaseStatement( 'delete from COMMENT where Id = ?' );
    statement.bindParam( 1, id, PDO::PARAM_INT );

    if ( !statement.execute() )
    {
        var_dump( statement.errorInfo() );
    }
}
